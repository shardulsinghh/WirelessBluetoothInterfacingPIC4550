

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Aug 17 12:14:32 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21  0000                     _OSCCON	set	4051
    22  0000                     _RCREG	set	4014
    23  0000                     _RCSTA	set	4011
    24  0000                     _SPBRG	set	4015
    25  0000                     _TRISD	set	3989
    26  0000                     _TXREG	set	4013
    27  0000                     _TXSTA	set	4012
    28  0000                     _LATD0	set	31840
    29  0000                     _RCIF	set	31989
    30  0000                     _TRISC6	set	31910
    31  0000                     _TRISC7	set	31911
    32  0000                     _TXIF	set	31988
    33                           
    34                           	psect	smallconst
    35  000800                     __psmallconst:
    36                           	opt stack 0
    37  000800  00                 	db	0
    38  000801                     STR_3:
    39  000801  20                 	db	32
    40  000802  73                 	db	115	;'s'
    41  000803  65                 	db	101	;'e'
    42  000804  6C                 	db	108	;'l'
    43  000805  65                 	db	101	;'e'
    44  000806  63                 	db	99	;'c'
    45  000807  74                 	db	116	;'t'
    46  000808  20                 	db	32
    47  000809  31                 	db	49	;'1'
    48  00080A  20                 	db	32
    49  00080B  6F                 	db	111	;'o'
    50  00080C  72                 	db	114	;'r'
    51  00080D  20                 	db	32
    52  00080E  32                 	db	50	;'2'
    53  00080F  00                 	db	0
    54  000810                     STR_2:
    55  000810  4C                 	db	76	;'L'
    56  000811  45                 	db	69	;'E'
    57  000812  44                 	db	68	;'D'
    58  000813  5F                 	db	95	;'_'
    59  000814  4F                 	db	79	;'O'
    60  000815  46                 	db	70	;'F'
    61  000816  46                 	db	70	;'F'
    62  000817  00                 	db	0
    63  000818                     STR_1:
    64  000818  4C                 	db	76	;'L'
    65  000819  45                 	db	69	;'E'
    66  00081A  44                 	db	68	;'D'
    67  00081B  5F                 	db	95	;'_'
    68  00081C  4F                 	db	79	;'O'
    69  00081D  4E                 	db	78	;'N'
    70  00081E  00                 	db	0
    71                           
    72                           ; #config settings
    73  00081F  00                 	db	0	; dummy byte at the end
    74  0000                     
    75                           	psect	cinit
    76  000E52                     __pcinit:
    77                           	opt stack 0
    78  000E52                     start_initialization:
    79                           	opt stack 0
    80  000E52                     __initialization:
    81                           	opt stack 0
    82  000E52                     end_of_initialization:
    83                           	opt stack 0
    84  000E52                     __end_of__initialization:
    85                           	opt stack 0
    86  000E52  0E00               	movlw	low (__Lsmallconst shr (0+16))
    87  000E54  6EF8               	movwf	tblptru,c
    88  000E56  0E08               	movlw	high __Lsmallconst
    89  000E58  6EF7               	movwf	tblptrh,c
    90  000E5A  0100               	movlb	0
    91  000E5C  EF39  F006         	goto	_main	;jump to C main() function
    92                           tblptru	equ	0xFF8
    93                           tblptrh	equ	0xFF7
    94                           
    95                           	psect	cstackCOMRAM
    96  000001                     __pcstackCOMRAM:
    97                           	opt stack 0
    98  000001                     ?___ftpack:
    99                           	opt stack 0
   100  000001                     ?___fttol:
   101                           	opt stack 0
   102  000001                     USART_TransmitChar@out:
   103                           	opt stack 0
   104  000001                     MSdelay@val:
   105                           	opt stack 0
   106  000001                     ___ftpack@arg:
   107                           	opt stack 0
   108  000001                     ___fttol@f1:
   109                           	opt stack 0
   110                           
   111                           ; 3 bytes @ 0x0
   112  000001                     	ds	1
   113  000002                     USART_SendString@out:
   114                           	opt stack 0
   115                           
   116                           ; 2 bytes @ 0x1
   117  000002                     	ds	1
   118  000003                     MSdelay@i:
   119                           	opt stack 0
   120                           
   121                           ; 2 bytes @ 0x2
   122  000003                     	ds	1
   123  000004                     ___ftpack@exp:
   124                           	opt stack 0
   125                           
   126                           ; 1 bytes @ 0x3
   127  000004                     	ds	1
   128  000005                     ??___fttol:
   129  000005                     ___ftpack@sign:
   130                           	opt stack 0
   131  000005                     MSdelay@j:
   132                           	opt stack 0
   133                           
   134                           ; 2 bytes @ 0x4
   135  000005                     	ds	1
   136  000006                     ??___ftpack:
   137                           
   138                           ; 0 bytes @ 0x5
   139  000006                     	ds	3
   140  000009                     ?___altoft:
   141                           	opt stack 0
   142  000009                     ___altoft@c:
   143                           	opt stack 0
   144                           
   145                           ; 4 bytes @ 0x8
   146  000009                     	ds	1
   147  00000A                     ___fttol@sign1:
   148                           	opt stack 0
   149                           
   150                           ; 1 bytes @ 0x9
   151  00000A                     	ds	1
   152  00000B                     ___fttol@lval:
   153                           	opt stack 0
   154                           
   155                           ; 4 bytes @ 0xA
   156  00000B                     	ds	2
   157  00000D                     ??___altoft:
   158                           
   159                           ; 0 bytes @ 0xC
   160  00000D                     	ds	2
   161  00000F                     ___fttol@exp1:
   162                           	opt stack 0
   163                           
   164                           ; 1 bytes @ 0xE
   165  00000F                     	ds	2
   166  000011                     ___altoft@exp:
   167                           	opt stack 0
   168                           
   169                           ; 1 bytes @ 0x10
   170  000011                     	ds	1
   171  000012                     ___altoft@sign:
   172                           	opt stack 0
   173                           
   174                           ; 1 bytes @ 0x11
   175  000012                     	ds	1
   176  000013                     ?___ftdiv:
   177                           	opt stack 0
   178  000013                     ___ftdiv@f1:
   179                           	opt stack 0
   180                           
   181                           ; 3 bytes @ 0x12
   182  000013                     	ds	3
   183  000016                     ___ftdiv@f2:
   184                           	opt stack 0
   185                           
   186                           ; 3 bytes @ 0x15
   187  000016                     	ds	3
   188  000019                     ??___ftdiv:
   189                           
   190                           ; 0 bytes @ 0x18
   191  000019                     	ds	3
   192  00001C                     ___ftdiv@cntr:
   193                           	opt stack 0
   194                           
   195                           ; 1 bytes @ 0x1B
   196  00001C                     	ds	1
   197  00001D                     ___ftdiv@f3:
   198                           	opt stack 0
   199                           
   200                           ; 3 bytes @ 0x1C
   201  00001D                     	ds	3
   202  000020                     ___ftdiv@exp:
   203                           	opt stack 0
   204                           
   205                           ; 1 bytes @ 0x1F
   206  000020                     	ds	1
   207  000021                     ___ftdiv@sign:
   208                           	opt stack 0
   209                           
   210                           ; 1 bytes @ 0x20
   211  000021                     	ds	1
   212  000022                     ?___ftadd:
   213                           	opt stack 0
   214  000022                     ___ftadd@f1:
   215                           	opt stack 0
   216                           
   217                           ; 3 bytes @ 0x21
   218  000022                     	ds	3
   219  000025                     ___ftadd@f2:
   220                           	opt stack 0
   221                           
   222                           ; 3 bytes @ 0x24
   223  000025                     	ds	3
   224  000028                     ??___ftadd:
   225                           
   226                           ; 0 bytes @ 0x27
   227  000028                     	ds	3
   228  00002B                     ___ftadd@sign:
   229                           	opt stack 0
   230                           
   231                           ; 1 bytes @ 0x2A
   232  00002B                     	ds	1
   233  00002C                     ___ftadd@exp2:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x2B
   237  00002C                     	ds	1
   238  00002D                     ___ftadd@exp1:
   239                           	opt stack 0
   240                           
   241                           ; 1 bytes @ 0x2C
   242  00002D                     	ds	1
   243  00002E                     USART_Init@baud_rate:
   244                           	opt stack 0
   245                           
   246                           ; 4 bytes @ 0x2D
   247  00002E                     	ds	4
   248  000032                     USART_Init@temp:
   249                           	opt stack 0
   250                           
   251                           ; 3 bytes @ 0x31
   252  000032                     	ds	3
   253  000035                     main@data_in:
   254                           	opt stack 0
   255                           
   256                           ; 1 bytes @ 0x34
   257  000035                     	ds	1
   258                           tblptru	equ	0xFF8
   259                           tblptrh	equ	0xFF7
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   263 ;;
   264 ;; *************** function _main *****************
   265 ;; Defined at:
   266 ;;		line 11 in file "HC-05_Module.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;  data_in         1   52[COMRAM] unsigned char 
   271 ;; Return value:  Size  Location     Type
   272 ;;		None               void
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   280 ;;      Params:         0       0       0       0       0       0       0       0       0
   281 ;;      Locals:         1       0       0       0       0       0       0       0       0
   282 ;;      Temps:          0       0       0       0       0       0       0       0       0
   283 ;;      Totals:         1       0       0       0       0       0       0       0       0
   284 ;;Total ram usage:        1 bytes
   285 ;; Hardware stack levels required when called:    3
   286 ;; This function calls:
   287 ;;		_MSdelay
   288 ;;		_USART_Init
   289 ;;		_USART_ReceiveChar
   290 ;;		_USART_SendString
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  000C72                     __ptext0:
   298                           	opt stack 0
   299  000C72                     _main:
   300                           	opt stack 28
   301                           
   302                           ;HC-05_Module.c: 13: OSCCON=0x72;
   303                           
   304                           ;incstack = 0
   305  000C72  0E72               	movlw	114
   306  000C74  6ED3               	movwf	4051,c	;volatile
   307                           
   308                           ;HC-05_Module.c: 15: char data_in;
   309                           ;HC-05_Module.c: 16: TRISD = 0;
   310  000C76  0E00               	movlw	0
   311  000C78  6E95               	movwf	3989,c	;volatile
   312                           
   313                           ;HC-05_Module.c: 17: USART_Init(9600);
   314  000C7A  0E80               	movlw	128
   315  000C7C  6E2E               	movwf	USART_Init@baud_rate,c
   316  000C7E  0E25               	movlw	37
   317  000C80  6E2F               	movwf	USART_Init@baud_rate+1,c
   318  000C82  0E00               	movlw	0
   319  000C84  6E30               	movwf	USART_Init@baud_rate+2,c
   320  000C86  0E00               	movlw	0
   321  000C88  6E31               	movwf	USART_Init@baud_rate+3,c
   322  000C8A  ECB7  F006         	call	_USART_Init	;wreg free
   323                           
   324                           ;HC-05_Module.c: 18: MSdelay(50);
   325  000C8E  0E00               	movlw	0
   326  000C90  6E02               	movwf	MSdelay@val+1,c
   327  000C92  0E32               	movlw	50
   328  000C94  6E01               	movwf	MSdelay@val,c
   329  000C96  ECF4  F006         	call	_MSdelay	;wreg free
   330  000C9A  D000               	goto	l1193
   331  000C9C                     l1193:
   332                           
   333                           ;HC-05_Module.c: 20: {
   334                           ;HC-05_Module.c: 21: data_in=USART_ReceiveChar();
   335  000C9C  EC37  F007         	call	_USART_ReceiveChar	;wreg free
   336  000CA0  6E35               	movwf	main@data_in,c
   337                           
   338                           ;HC-05_Module.c: 22: if(data_in=='1')
   339  000CA2  0E31               	movlw	49
   340  000CA4  1835               	xorwf	main@data_in,w,c
   341  000CA6  A4D8               	btfss	status,2,c
   342  000CA8  D008               	goto	l1201
   343                           
   344                           ;HC-05_Module.c: 23: {
   345                           ;HC-05_Module.c: 24: LATD0 = 0;
   346  000CAA  908C               	bcf	3980,0,c	;volatile
   347                           
   348                           ;HC-05_Module.c: 25: USART_SendString("LED_ON");
   349  000CAC  0E18               	movlw	low STR_1
   350  000CAE  6E02               	movwf	USART_SendString@out,c
   351  000CB0  0E08               	movlw	high STR_1
   352  000CB2  6E03               	movwf	USART_SendString@out+1,c
   353  000CB4  EC13  F007         	call	_USART_SendString	;wreg free
   354                           
   355                           ;HC-05_Module.c: 26: }
   356  000CB8  D013               	goto	l1209
   357  000CBA                     l1201:
   358                           
   359                           ;HC-05_Module.c: 27: else if(data_in=='2')
   360  000CBA  0E32               	movlw	50
   361  000CBC  1835               	xorwf	main@data_in,w,c
   362  000CBE  A4D8               	btfss	status,2,c
   363  000CC0  D008               	goto	l1207
   364                           
   365                           ;HC-05_Module.c: 29: {
   366                           ;HC-05_Module.c: 30: LATD0 = 1;
   367  000CC2  808C               	bsf	3980,0,c	;volatile
   368                           
   369                           ;HC-05_Module.c: 31: USART_SendString("LED_OFF");
   370  000CC4  0E10               	movlw	low STR_2
   371  000CC6  6E02               	movwf	USART_SendString@out,c
   372  000CC8  0E08               	movlw	high STR_2
   373  000CCA  6E03               	movwf	USART_SendString@out+1,c
   374  000CCC  EC13  F007         	call	_USART_SendString	;wreg free
   375                           
   376                           ;HC-05_Module.c: 32: }
   377  000CD0  D007               	goto	l1209
   378  000CD2                     l1207:
   379                           
   380                           ;HC-05_Module.c: 33: else
   381                           ;HC-05_Module.c: 34: {
   382                           ;HC-05_Module.c: 35: USART_SendString(" select 1 or 2");
   383  000CD2  0E01               	movlw	low STR_3
   384  000CD4  6E02               	movwf	USART_SendString@out,c
   385  000CD6  0E08               	movlw	high STR_3
   386  000CD8  6E03               	movwf	USART_SendString@out+1,c
   387  000CDA  EC13  F007         	call	_USART_SendString	;wreg free
   388  000CDE  D000               	goto	l1209
   389  000CE0                     l1209:
   390                           
   391                           ;HC-05_Module.c: 36: }
   392                           ;HC-05_Module.c: 37: MSdelay(100);
   393  000CE0  0E00               	movlw	0
   394  000CE2  6E02               	movwf	MSdelay@val+1,c
   395  000CE4  0E64               	movlw	100
   396  000CE6  6E01               	movwf	MSdelay@val,c
   397  000CE8  ECF4  F006         	call	_MSdelay	;wreg free
   398  000CEC  D7D7               	goto	l1193
   399  000CEE  EF00  F000         	goto	start
   400  000CF2                     __end_of_main:
   401                           	opt stack 0
   402                           tblptru	equ	0xFF8
   403                           tblptrh	equ	0xFF7
   404                           status	equ	0xFD8
   405                           
   406 ;; *************** function _USART_SendString *****************
   407 ;; Defined at:
   408 ;;		line 33 in file "USART_Source_File.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  out             2    1[COMRAM] PTR const unsigned char 
   411 ;;		 -> STR_3(15), STR_2(8), STR_1(7), 
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;		None               void
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   423 ;;      Params:         2       0       0       0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0
   426 ;;      Totals:         2       0       0       0       0       0       0       0       0
   427 ;;Total ram usage:        2 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    1
   430 ;; This function calls:
   431 ;;		_USART_TransmitChar
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           	psect	text1
   438  000E26                     __ptext1:
   439                           	opt stack 0
   440  000E26                     _USART_SendString:
   441                           	opt stack 29
   442                           
   443                           ;USART_Source_File.c: 35: while(*out!='\0')
   444                           
   445                           ;incstack = 0
   446  000E26  D00B               	goto	l1185
   447  000E28                     l1181:
   448                           
   449                           ;USART_Source_File.c: 36: {
   450                           ;USART_Source_File.c: 37: USART_TransmitChar(*out);
   451  000E28  C002  FFF6         	movff	USART_SendString@out,tblptrl
   452  000E2C  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
   453  000E30                     	if	0	;tblptru may be non-zero
   454  000E30                     	endif
   455  000E30                     	if	0	;tblptru may be non-zero
   456  000E30                     	endif
   457  000E30  0008               	tblrd		*
   458  000E32  50F5               	movf	tablat,w,c
   459  000E34  EC30  F007         	call	_USART_TransmitChar
   460                           
   461                           ;USART_Source_File.c: 38: out++;
   462  000E38  4A02               	infsnz	USART_SendString@out,f,c
   463  000E3A  2A03               	incf	USART_SendString@out+1,f,c
   464  000E3C  D000               	goto	l1185
   465  000E3E                     l1185:
   466  000E3E  C002  FFF6         	movff	USART_SendString@out,tblptrl
   467  000E42  C003  FFF7         	movff	USART_SendString@out+1,tblptrh
   468  000E46                     	if	0	;tblptru may be non-zero
   469  000E46                     	endif
   470  000E46                     	if	0	;tblptru may be non-zero
   471  000E46                     	endif
   472  000E46  0008               	tblrd		*
   473  000E48  50F5               	movf	tablat,w,c
   474  000E4A  0900               	iorlw	0
   475  000E4C  A4D8               	btfss	status,2,c
   476  000E4E  D7EC               	goto	l1181
   477  000E50  0012               	return		;funcret
   478  000E52                     __end_of_USART_SendString:
   479                           	opt stack 0
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           status	equ	0xFD8
   485                           
   486 ;; *************** function _USART_TransmitChar *****************
   487 ;; Defined at:
   488 ;;		line 19 in file "USART_Source_File.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  out             1    wreg     unsigned char 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  out             1    0[COMRAM] unsigned char 
   493 ;; Return value:  Size  Location     Type
   494 ;;		None               void
   495 ;; Registers used:
   496 ;;		wreg
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   502 ;;      Params:         0       0       0       0       0       0       0       0       0
   503 ;;      Locals:         1       0       0       0       0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0       0       0       0       0
   505 ;;      Totals:         1       0       0       0       0       0       0       0       0
   506 ;;Total ram usage:        1 bytes
   507 ;; Hardware stack levels used:    1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_USART_SendString
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           	psect	text2
   516  000E60                     __ptext2:
   517                           	opt stack 0
   518  000E60                     _USART_TransmitChar:
   519                           	opt stack 29
   520                           
   521                           ;incstack = 0
   522                           ;USART_TransmitChar@out stored from wreg
   523  000E60  6E01               	movwf	USART_TransmitChar@out,c
   524                           
   525                           ;USART_Source_File.c: 21: while(TXIF==0);
   526  000E62  D000               	goto	l48
   527  000E64                     l48:
   528  000E64  A89E               	btfss	3998,4,c	;volatile
   529  000E66  D7FE               	goto	l48
   530                           
   531                           ;USART_Source_File.c: 22: TXREG=out;
   532  000E68  C001  FFAD         	movff	USART_TransmitChar@out,4013	;volatile
   533  000E6C  0012               	return		;funcret
   534  000E6E                     __end_of_USART_TransmitChar:
   535                           	opt stack 0
   536                           tblptru	equ	0xFF8
   537                           tblptrh	equ	0xFF7
   538                           tblptrl	equ	0xFF6
   539                           tablat	equ	0xFF5
   540                           status	equ	0xFD8
   541                           
   542 ;; *************** function _USART_ReceiveChar *****************
   543 ;; Defined at:
   544 ;;		line 26 in file "USART_Source_File.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      unsigned char 
   551 ;; Registers used:
   552 ;;		wreg, status,2
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   558 ;;      Params:         0       0       0       0       0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; This function calls:
   565 ;;		Nothing
   566 ;; This function is called by:
   567 ;;		_main
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text3
   572  000E6E                     __ptext3:
   573                           	opt stack 0
   574  000E6E                     _USART_ReceiveChar:
   575                           	opt stack 30
   576                           
   577                           ;USART_Source_File.c: 29: while(RCIF==0);
   578                           
   579                           ;incstack = 0
   580  000E6E  D000               	goto	l54
   581  000E70                     l54:
   582  000E70  AA9E               	btfss	3998,5,c	;volatile
   583  000E72  D7FE               	goto	l54
   584                           
   585                           ;USART_Source_File.c: 30: return(RCREG);
   586  000E74  50AE               	movf	4014,w,c	;volatile
   587  000E76  D000               	goto	l57
   588  000E78                     l57:
   589  000E78  0012               	return		;funcret
   590  000E7A                     __end_of_USART_ReceiveChar:
   591                           	opt stack 0
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           status	equ	0xFD8
   597                           
   598 ;; *************** function _USART_Init *****************
   599 ;; Defined at:
   600 ;;		line 8 in file "USART_Source_File.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;  baud_rate       4   45[COMRAM] long 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  temp            3   49[COMRAM] float 
   605 ;; Return value:  Size  Location     Type
   606 ;;		None               void
   607 ;; Registers used:
   608 ;;		wreg, status,2, status,0, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   614 ;;      Params:         4       0       0       0       0       0       0       0       0
   615 ;;      Locals:         3       0       0       0       0       0       0       0       0
   616 ;;      Temps:          0       0       0       0       0       0       0       0       0
   617 ;;      Totals:         7       0       0       0       0       0       0       0       0
   618 ;;Total ram usage:        7 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    2
   621 ;; This function calls:
   622 ;;		___altoft
   623 ;;		___ftadd
   624 ;;		___ftdiv
   625 ;;		___fttol
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           	psect	text4
   632  000D6E                     __ptext4:
   633                           	opt stack 0
   634  000D6E                     _USART_Init:
   635                           	opt stack 28
   636                           
   637                           ;USART_Source_File.c: 10: float temp;
   638                           ;USART_Source_File.c: 11: TRISC6=0;
   639                           
   640                           ;incstack = 0
   641  000D6E  9C94               	bcf	3988,6,c	;volatile
   642                           
   643                           ;USART_Source_File.c: 12: TRISC7=1;
   644  000D70  8E94               	bsf	3988,7,c	;volatile
   645                           
   646                           ;USART_Source_File.c: 13: temp=(((float)(8000000/64)/(float)baud_rate)-1);
   647  000D72  C02E  F009         	movff	USART_Init@baud_rate,___altoft@c
   648  000D76  C02F  F00A         	movff	USART_Init@baud_rate+1,___altoft@c+1
   649  000D7A  C030  F00B         	movff	USART_Init@baud_rate+2,___altoft@c+2
   650  000D7E  C031  F00C         	movff	USART_Init@baud_rate+3,___altoft@c+3
   651  000D82  EC79  F006         	call	___altoft	;wreg free
   652  000D86  C009  F016         	movff	?___altoft,___ftdiv@f2
   653  000D8A  C00A  F017         	movff	?___altoft+1,___ftdiv@f2+1
   654  000D8E  C00B  F018         	movff	?___altoft+2,___ftdiv@f2+2
   655  000D92  0E24               	movlw	36
   656  000D94  6E13               	movwf	___ftdiv@f1,c
   657  000D96  0EF4               	movlw	244
   658  000D98  6E14               	movwf	___ftdiv@f1+1,c
   659  000D9A  0E47               	movlw	71
   660  000D9C  6E15               	movwf	___ftdiv@f1+2,c
   661  000D9E  EC65  F005         	call	___ftdiv	;wreg free
   662  000DA2  C013  F022         	movff	?___ftdiv,___ftadd@f1
   663  000DA6  C014  F023         	movff	?___ftdiv+1,___ftadd@f1+1
   664  000DAA  C015  F024         	movff	?___ftdiv+2,___ftadd@f1+2
   665  000DAE  0E00               	movlw	0
   666  000DB0  6E25               	movwf	___ftadd@f2,c
   667  000DB2  0E80               	movlw	128
   668  000DB4  6E26               	movwf	___ftadd@f2+1,c
   669  000DB6  0EBF               	movlw	191
   670  000DB8  6E27               	movwf	___ftadd@f2+2,c
   671  000DBA  EC10  F004         	call	___ftadd	;wreg free
   672  000DBE  C022  F032         	movff	?___ftadd,USART_Init@temp
   673  000DC2  C023  F033         	movff	?___ftadd+1,USART_Init@temp+1
   674  000DC6  C024  F034         	movff	?___ftadd+2,USART_Init@temp+2
   675                           
   676                           ;USART_Source_File.c: 14: SPBRG=(int)temp;
   677  000DCA  C032  F001         	movff	USART_Init@temp,___fttol@f1
   678  000DCE  C033  F002         	movff	USART_Init@temp+1,___fttol@f1+1
   679  000DD2  C034  F003         	movff	USART_Init@temp+2,___fttol@f1+2
   680  000DD6  ECF2  F004         	call	___fttol	;wreg free
   681  000DDA  5001               	movf	?___fttol,w,c
   682  000DDC  6EAF               	movwf	4015,c	;volatile
   683                           
   684                           ;USART_Source_File.c: 15: TXSTA=0x20;
   685  000DDE  0E20               	movlw	32
   686  000DE0  6EAC               	movwf	4012,c	;volatile
   687                           
   688                           ;USART_Source_File.c: 16: RCSTA=0x90;
   689  000DE2  0E90               	movlw	144
   690  000DE4  6EAB               	movwf	4011,c	;volatile
   691  000DE6  0012               	return		;funcret
   692  000DE8                     __end_of_USART_Init:
   693                           	opt stack 0
   694                           tblptru	equ	0xFF8
   695                           tblptrh	equ	0xFF7
   696                           tblptrl	equ	0xFF6
   697                           tablat	equ	0xFF5
   698                           status	equ	0xFD8
   699                           
   700 ;; *************** function ___fttol *****************
   701 ;; Defined at:
   702 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  f1              3    0[COMRAM] float 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  lval            4   10[COMRAM] unsigned long 
   707 ;;  exp1            1   14[COMRAM] unsigned char 
   708 ;;  sign1           1    9[COMRAM] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  4    0[COMRAM] long 
   711 ;; Registers used:
   712 ;;		wreg, status,2, status,0
   713 ;; Tracked objects:
   714 ;;		On entry : 0/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   718 ;;      Params:         4       0       0       0       0       0       0       0       0
   719 ;;      Locals:         6       0       0       0       0       0       0       0       0
   720 ;;      Temps:          5       0       0       0       0       0       0       0       0
   721 ;;      Totals:        15       0       0       0       0       0       0       0       0
   722 ;;Total ram usage:       15 bytes
   723 ;; Hardware stack levels used:    1
   724 ;; This function calls:
   725 ;;		Nothing
   726 ;; This function is called by:
   727 ;;		_USART_Init
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text5
   732  0009E4                     __ptext5:
   733                           	opt stack 0
   734  0009E4                     ___fttol:
   735                           	opt stack 29
   736                           
   737                           ;incstack = 0
   738  0009E4  C003  F005         	movff	___fttol@f1+2,??___fttol
   739  0009E8  6A06               	clrf	(??___fttol+1)& (0+255),c
   740  0009EA  6A07               	clrf	(??___fttol+2)& (0+255),c
   741  0009EC  3402               	rlcf	___fttol@f1+1,w,c
   742  0009EE  3605               	rlcf	??___fttol& (0+255),f,c
   743  0009F0  E301               	bnc	u891
   744  0009F2  8006               	bsf	(??___fttol+1)& (0+255),0,c
   745  0009F4                     u891:
   746  0009F4  5005               	movf	??___fttol,w,c
   747  0009F6  6E0F               	movwf	___fttol@exp1,c
   748  0009F8  500F               	movf	___fttol@exp1,w,c
   749  0009FA  A4D8               	btfss	status,2,c
   750  0009FC  D002               	goto	l1115
   751  0009FE  D039               	goto	l1139
   752  000A00  D063               	goto	l490
   753  000A02                     l1115:
   754  000A02  0E17               	movlw	23
   755  000A04  6E05               	movwf	??___fttol& (0+255),c
   756  000A06  C001  F006         	movff	___fttol@f1,??___fttol+1
   757  000A0A  C002  F007         	movff	___fttol@f1+1,??___fttol+2
   758  000A0E  C003  F008         	movff	___fttol@f1+2,??___fttol+3
   759  000A12  2805               	incf	??___fttol,w,c
   760  000A14  6E09               	movwf	(??___fttol+4)& (0+255),c
   761  000A16  D004               	goto	u910
   762  000A18                     u915:
   763  000A18  90D8               	bcf	status,0,c
   764  000A1A  3208               	rrcf	??___fttol+3,f,c
   765  000A1C  3207               	rrcf	??___fttol+2,f,c
   766  000A1E  3206               	rrcf	??___fttol+1,f,c
   767  000A20                     u910:
   768  000A20  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
   769  000A22  D7FA               	goto	u915
   770  000A24  5006               	movf	??___fttol+1,w,c
   771  000A26  6E0A               	movwf	___fttol@sign1,c
   772  000A28  8E02               	bsf	___fttol@f1+1,7,c
   773  000A2A  0EFF               	movlw	255
   774  000A2C  1601               	andwf	___fttol@f1,f,c
   775  000A2E  0EFF               	movlw	255
   776  000A30  1602               	andwf	___fttol@f1+1,f,c
   777  000A32  0E00               	movlw	0
   778  000A34  1603               	andwf	___fttol@f1+2,f,c
   779  000A36  5001               	movf	___fttol@f1,w,c
   780  000A38  6E0B               	movwf	___fttol@lval,c
   781  000A3A  5002               	movf	___fttol@f1+1,w,c
   782  000A3C  6E0C               	movwf	___fttol@lval+1,c
   783  000A3E  5003               	movf	___fttol@f1+2,w,c
   784  000A40  6E0D               	movwf	___fttol@lval+2,c
   785  000A42  6A0E               	clrf	___fttol@lval+3,c
   786  000A44  0E8E               	movlw	142
   787  000A46  5E0F               	subwf	___fttol@exp1,f,c
   788  000A48  AE0F               	btfss	___fttol@exp1,7,c
   789  000A4A  D010               	goto	l1137
   790  000A4C  500F               	movf	___fttol@exp1,w,c
   791  000A4E  0A80               	xorlw	128
   792  000A50  0F8F               	addlw	143
   793  000A52  B0D8               	btfsc	status,0,c
   794  000A54  D003               	goto	l1133
   795  000A56  D00D               	goto	l1139
   796  000A58  D037               	goto	l490
   797  000A5A  D000               	goto	l1133
   798  000A5C                     l1133:
   799  000A5C  90D8               	bcf	status,0,c
   800  000A5E  320E               	rrcf	___fttol@lval+3,f,c
   801  000A60  320D               	rrcf	___fttol@lval+2,f,c
   802  000A62  320C               	rrcf	___fttol@lval+1,f,c
   803  000A64  320B               	rrcf	___fttol@lval,f,c
   804  000A66  3E0F               	incfsz	___fttol@exp1,f,c
   805  000A68  D7F9               	goto	l1133
   806  000A6A  D019               	goto	l1147
   807  000A6C                     l1137:
   808  000A6C  0E17               	movlw	23
   809  000A6E  640F               	cpfsgt	___fttol@exp1,c
   810  000A70  D011               	goto	l1145
   811  000A72                     l1139:
   812  000A72  0E00               	movlw	0
   813  000A74  6E01               	movwf	?___fttol,c
   814  000A76  0E00               	movlw	0
   815  000A78  6E02               	movwf	?___fttol+1,c
   816  000A7A  0E00               	movlw	0
   817  000A7C  6E03               	movwf	?___fttol+2,c
   818  000A7E  0E00               	movlw	0
   819  000A80  6E04               	movwf	?___fttol+3,c
   820  000A82  D022               	goto	l490
   821  000A84  D007               	goto	l1145
   822  000A86                     l1143:
   823  000A86  90D8               	bcf	status,0,c
   824  000A88  360B               	rlcf	___fttol@lval,f,c
   825  000A8A  360C               	rlcf	___fttol@lval+1,f,c
   826  000A8C  360D               	rlcf	___fttol@lval+2,f,c
   827  000A8E  360E               	rlcf	___fttol@lval+3,f,c
   828  000A90  060F               	decf	___fttol@exp1,f,c
   829  000A92  D000               	goto	l1145
   830  000A94                     l1145:
   831  000A94  500F               	movf	___fttol@exp1,w,c
   832  000A96  B4D8               	btfsc	status,2,c
   833  000A98  D002               	goto	l1147
   834  000A9A  D7F5               	goto	l1143
   835  000A9C  D000               	goto	l1147
   836  000A9E                     l1147:
   837  000A9E  500A               	movf	___fttol@sign1,w,c
   838  000AA0  B4D8               	btfsc	status,2,c
   839  000AA2  D009               	goto	l1151
   840  000AA4  1E0E               	comf	___fttol@lval+3,f,c
   841  000AA6  1E0D               	comf	___fttol@lval+2,f,c
   842  000AA8  1E0C               	comf	___fttol@lval+1,f,c
   843  000AAA  6C0B               	negf	___fttol@lval,c
   844  000AAC  0E00               	movlw	0
   845  000AAE  220C               	addwfc	___fttol@lval+1,f,c
   846  000AB0  220D               	addwfc	___fttol@lval+2,f,c
   847  000AB2  220E               	addwfc	___fttol@lval+3,f,c
   848  000AB4  D000               	goto	l1151
   849  000AB6                     l1151:
   850  000AB6  C00B  F001         	movff	___fttol@lval,?___fttol
   851  000ABA  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
   852  000ABE  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
   853  000AC2  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
   854  000AC6  D000               	goto	l490
   855  000AC8                     l490:
   856  000AC8  0012               	return		;funcret
   857  000ACA                     __end_of___fttol:
   858                           	opt stack 0
   859                           tblptru	equ	0xFF8
   860                           tblptrh	equ	0xFF7
   861                           tblptrl	equ	0xFF6
   862                           tablat	equ	0xFF5
   863                           status	equ	0xFD8
   864                           
   865 ;; *************** function ___ftdiv *****************
   866 ;; Defined at:
   867 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
   868 ;; Parameters:    Size  Location     Type
   869 ;;  f1              3   18[COMRAM] float 
   870 ;;  f2              3   21[COMRAM] float 
   871 ;; Auto vars:     Size  Location     Type
   872 ;;  f3              3   28[COMRAM] float 
   873 ;;  sign            1   32[COMRAM] unsigned char 
   874 ;;  exp             1   31[COMRAM] unsigned char 
   875 ;;  cntr            1   27[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  3   18[COMRAM] float 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   885 ;;      Params:         6       0       0       0       0       0       0       0       0
   886 ;;      Locals:         6       0       0       0       0       0       0       0       0
   887 ;;      Temps:          3       0       0       0       0       0       0       0       0
   888 ;;      Totals:        15       0       0       0       0       0       0       0       0
   889 ;;Total ram usage:       15 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    1
   892 ;; This function calls:
   893 ;;		___ftpack
   894 ;; This function is called by:
   895 ;;		_USART_Init
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           	psect	text6
   900  000ACA                     __ptext6:
   901                           	opt stack 0
   902  000ACA                     ___ftdiv:
   903                           	opt stack 28
   904                           
   905                           ;incstack = 0
   906  000ACA  C015  F019         	movff	___ftdiv@f1+2,??___ftdiv
   907  000ACE  6A1A               	clrf	(??___ftdiv+1)& (0+255),c
   908  000AD0  6A1B               	clrf	(??___ftdiv+2)& (0+255),c
   909  000AD2  3414               	rlcf	___ftdiv@f1+1,w,c
   910  000AD4  3619               	rlcf	??___ftdiv& (0+255),f,c
   911  000AD6  E301               	bnc	u841
   912  000AD8  801A               	bsf	(??___ftdiv+1)& (0+255),0,c
   913  000ADA                     u841:
   914  000ADA  5019               	movf	??___ftdiv,w,c
   915  000ADC  6E20               	movwf	___ftdiv@exp,c
   916  000ADE  5020               	movf	___ftdiv@exp,w,c
   917  000AE0  A4D8               	btfss	status,2,c
   918  000AE2  D002               	goto	l1069
   919  000AE4  D00E               	goto	l1071
   920  000AE6  D061               	goto	l454
   921  000AE8                     l1069:
   922  000AE8  C018  F019         	movff	___ftdiv@f2+2,??___ftdiv
   923  000AEC  6A1A               	clrf	(??___ftdiv+1)& (0+255),c
   924  000AEE  6A1B               	clrf	(??___ftdiv+2)& (0+255),c
   925  000AF0  3417               	rlcf	___ftdiv@f2+1,w,c
   926  000AF2  3619               	rlcf	??___ftdiv& (0+255),f,c
   927  000AF4  E301               	bnc	u861
   928  000AF6  801A               	bsf	(??___ftdiv+1)& (0+255),0,c
   929  000AF8                     u861:
   930  000AF8  5019               	movf	??___ftdiv,w,c
   931  000AFA  6E21               	movwf	___ftdiv@sign,c
   932  000AFC  5021               	movf	___ftdiv@sign,w,c
   933  000AFE  A4D8               	btfss	status,2,c
   934  000B00  D007               	goto	l1075
   935  000B02                     l1071:
   936  000B02  0E00               	movlw	0
   937  000B04  6E13               	movwf	?___ftdiv,c
   938  000B06  0E00               	movlw	0
   939  000B08  6E14               	movwf	?___ftdiv+1,c
   940  000B0A  0E00               	movlw	0
   941  000B0C  6E15               	movwf	?___ftdiv+2,c
   942  000B0E  D04D               	goto	l454
   943  000B10                     l1075:
   944  000B10  0E00               	movlw	0
   945  000B12  6E1D               	movwf	___ftdiv@f3,c
   946  000B14  0E00               	movlw	0
   947  000B16  6E1E               	movwf	___ftdiv@f3+1,c
   948  000B18  0E00               	movlw	0
   949  000B1A  6E1F               	movwf	___ftdiv@f3+2,c
   950  000B1C  5021               	movf	___ftdiv@sign,w,c
   951  000B1E  0F89               	addlw	137
   952  000B20  5E20               	subwf	___ftdiv@exp,f,c
   953  000B22  C015  F021         	movff	___ftdiv@f1+2,___ftdiv@sign
   954  000B26  5018               	movf	___ftdiv@f2+2,w,c
   955  000B28  1A21               	xorwf	___ftdiv@sign,f,c
   956  000B2A  0E80               	movlw	128
   957  000B2C  1621               	andwf	___ftdiv@sign,f,c
   958  000B2E  8E14               	bsf	___ftdiv@f1+1,7,c
   959  000B30  0EFF               	movlw	255
   960  000B32  1613               	andwf	___ftdiv@f1,f,c
   961  000B34  0EFF               	movlw	255
   962  000B36  1614               	andwf	___ftdiv@f1+1,f,c
   963  000B38  0E00               	movlw	0
   964  000B3A  1615               	andwf	___ftdiv@f1+2,f,c
   965  000B3C  8E17               	bsf	___ftdiv@f2+1,7,c
   966  000B3E  0EFF               	movlw	255
   967  000B40  1616               	andwf	___ftdiv@f2,f,c
   968  000B42  0EFF               	movlw	255
   969  000B44  1617               	andwf	___ftdiv@f2+1,f,c
   970  000B46  0E00               	movlw	0
   971  000B48  1618               	andwf	___ftdiv@f2+2,f,c
   972  000B4A  0E18               	movlw	24
   973  000B4C  6E1C               	movwf	___ftdiv@cntr,c
   974  000B4E  D000               	goto	l1095
   975  000B50                     l1095:
   976  000B50  90D8               	bcf	status,0,c
   977  000B52  361D               	rlcf	___ftdiv@f3,f,c
   978  000B54  361E               	rlcf	___ftdiv@f3+1,f,c
   979  000B56  361F               	rlcf	___ftdiv@f3+2,f,c
   980  000B58  5016               	movf	___ftdiv@f2,w,c
   981  000B5A  5C13               	subwf	___ftdiv@f1,w,c
   982  000B5C  5017               	movf	___ftdiv@f2+1,w,c
   983  000B5E  5814               	subwfb	___ftdiv@f1+1,w,c
   984  000B60  5018               	movf	___ftdiv@f2+2,w,c
   985  000B62  5815               	subwfb	___ftdiv@f1+2,w,c
   986  000B64  A0D8               	btfss	status,0,c
   987  000B66  D007               	goto	l457
   988  000B68  5016               	movf	___ftdiv@f2,w,c
   989  000B6A  5E13               	subwf	___ftdiv@f1,f,c
   990  000B6C  5017               	movf	___ftdiv@f2+1,w,c
   991  000B6E  5A14               	subwfb	___ftdiv@f1+1,f,c
   992  000B70  5018               	movf	___ftdiv@f2+2,w,c
   993  000B72  5A15               	subwfb	___ftdiv@f1+2,f,c
   994  000B74  801D               	bsf	___ftdiv@f3,0,c
   995  000B76                     l457:
   996  000B76  90D8               	bcf	status,0,c
   997  000B78  3613               	rlcf	___ftdiv@f1,f,c
   998  000B7A  3614               	rlcf	___ftdiv@f1+1,f,c
   999  000B7C  3615               	rlcf	___ftdiv@f1+2,f,c
  1000  000B7E  2E1C               	decfsz	___ftdiv@cntr,f,c
  1001  000B80  D7E7               	goto	l1095
  1002  000B82  D000               	goto	l1105
  1003  000B84                     l1105:
  1004  000B84  C01D  F001         	movff	___ftdiv@f3,___ftpack@arg
  1005  000B88  C01E  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1006  000B8C  C01F  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1007  000B90  C020  F004         	movff	___ftdiv@exp,___ftpack@exp
  1008  000B94  C021  F005         	movff	___ftdiv@sign,___ftpack@sign
  1009  000B98  ECD6  F005         	call	___ftpack	;wreg free
  1010  000B9C  C001  F013         	movff	?___ftpack,?___ftdiv
  1011  000BA0  C002  F014         	movff	?___ftpack+1,?___ftdiv+1
  1012  000BA4  C003  F015         	movff	?___ftpack+2,?___ftdiv+2
  1013  000BA8  D000               	goto	l454
  1014  000BAA                     l454:
  1015  000BAA  0012               	return		;funcret
  1016  000BAC                     __end_of___ftdiv:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           tblptrh	equ	0xFF7
  1020                           tblptrl	equ	0xFF6
  1021                           tablat	equ	0xFF5
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function ___ftadd *****************
  1025 ;; Defined at:
  1026 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  f1              3   33[COMRAM] float 
  1029 ;;  f2              3   36[COMRAM] float 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  exp1            1   44[COMRAM] unsigned char 
  1032 ;;  exp2            1   43[COMRAM] unsigned char 
  1033 ;;  sign            1   42[COMRAM] unsigned char 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  3   33[COMRAM] float 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         6       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1045 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1046 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1047 ;;Total ram usage:       12 bytes
  1048 ;; Hardware stack levels used:    1
  1049 ;; Hardware stack levels required when called:    1
  1050 ;; This function calls:
  1051 ;;		___ftpack
  1052 ;; This function is called by:
  1053 ;;		_USART_Init
  1054 ;; This function uses a non-reentrant model
  1055 ;;
  1056                           
  1057                           	psect	text7
  1058  000820                     __ptext7:
  1059                           	opt stack 0
  1060  000820                     ___ftadd:
  1061                           	opt stack 28
  1062                           
  1063                           ;incstack = 0
  1064  000820  C024  F028         	movff	___ftadd@f1+2,??___ftadd
  1065  000824  6A29               	clrf	(??___ftadd+1)& (0+255),c
  1066  000826  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  1067  000828  3423               	rlcf	___ftadd@f1+1,w,c
  1068  00082A  3628               	rlcf	??___ftadd& (0+255),f,c
  1069  00082C  E301               	bnc	u631
  1070  00082E  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  1071  000830                     u631:
  1072  000830  5028               	movf	??___ftadd,w,c
  1073  000832  6E2D               	movwf	___ftadd@exp1,c
  1074  000834  C027  F028         	movff	___ftadd@f2+2,??___ftadd
  1075  000838  6A29               	clrf	(??___ftadd+1)& (0+255),c
  1076  00083A  6A2A               	clrf	(??___ftadd+2)& (0+255),c
  1077  00083C  3426               	rlcf	___ftadd@f2+1,w,c
  1078  00083E  3628               	rlcf	??___ftadd& (0+255),f,c
  1079  000840  E301               	bnc	u641
  1080  000842  8029               	bsf	(??___ftadd+1)& (0+255),0,c
  1081  000844                     u641:
  1082  000844  5028               	movf	??___ftadd,w,c
  1083  000846  6E2C               	movwf	___ftadd@exp2,c
  1084  000848  502D               	movf	___ftadd@exp1,w,c
  1085  00084A  B4D8               	btfsc	status,2,c
  1086  00084C  D00B               	goto	l422
  1087  00084E  502C               	movf	___ftadd@exp2,w,c
  1088  000850  5C2D               	subwf	___ftadd@exp1,w,c
  1089  000852  B0D8               	btfsc	status,0,c
  1090  000854  D00E               	goto	l1001
  1091  000856  502D               	movf	___ftadd@exp1,w,c
  1092  000858  0800               	sublw	0
  1093  00085A  242C               	addwf	___ftadd@exp2,w,c
  1094  00085C  6E28               	movwf	??___ftadd& (0+255),c
  1095  00085E  0E18               	movlw	24
  1096  000860  6428               	cpfsgt	??___ftadd,c
  1097  000862  D007               	goto	l1001
  1098  000864                     l422:
  1099  000864  C025  F022         	movff	___ftadd@f2,?___ftadd
  1100  000868  C026  F023         	movff	___ftadd@f2+1,?___ftadd+1
  1101  00086C  C027  F024         	movff	___ftadd@f2+2,?___ftadd+2
  1102  000870  D0B8               	goto	l423
  1103  000872                     l1001:
  1104  000872  502C               	movf	___ftadd@exp2,w,c
  1105  000874  B4D8               	btfsc	status,2,c
  1106  000876  D00B               	goto	l426
  1107  000878  502D               	movf	___ftadd@exp1,w,c
  1108  00087A  5C2C               	subwf	___ftadd@exp2,w,c
  1109  00087C  B0D8               	btfsc	status,0,c
  1110  00087E  D00E               	goto	l1007
  1111  000880  502C               	movf	___ftadd@exp2,w,c
  1112  000882  0800               	sublw	0
  1113  000884  242D               	addwf	___ftadd@exp1,w,c
  1114  000886  6E28               	movwf	??___ftadd& (0+255),c
  1115  000888  0E18               	movlw	24
  1116  00088A  6428               	cpfsgt	??___ftadd,c
  1117  00088C  D007               	goto	l1007
  1118  00088E                     l426:
  1119  00088E  C022  F022         	movff	___ftadd@f1,?___ftadd
  1120  000892  C023  F023         	movff	___ftadd@f1+1,?___ftadd+1
  1121  000896  C024  F024         	movff	___ftadd@f1+2,?___ftadd+2
  1122  00089A  D0A3               	goto	l423
  1123  00089C                     l1007:
  1124  00089C  0E06               	movlw	6
  1125  00089E  6E2B               	movwf	___ftadd@sign,c
  1126  0008A0  AE24               	btfss	___ftadd@f1+2,7,c
  1127  0008A2  D002               	goto	l1013
  1128  0008A4  8E2B               	bsf	___ftadd@sign,7,c
  1129  0008A6  D000               	goto	l1013
  1130  0008A8                     l1013:
  1131  0008A8  BE27               	btfsc	___ftadd@f2+2,7,c
  1132  0008AA  8C2B               	bsf	___ftadd@sign,6,c
  1133  0008AC  8E23               	bsf	___ftadd@f1+1,7,c
  1134  0008AE  0EFF               	movlw	255
  1135  0008B0  1622               	andwf	___ftadd@f1,f,c
  1136  0008B2  0EFF               	movlw	255
  1137  0008B4  1623               	andwf	___ftadd@f1+1,f,c
  1138  0008B6  0E00               	movlw	0
  1139  0008B8  1624               	andwf	___ftadd@f1+2,f,c
  1140  0008BA  8E26               	bsf	___ftadd@f2+1,7,c
  1141  0008BC  0EFF               	movlw	255
  1142  0008BE  1625               	andwf	___ftadd@f2,f,c
  1143  0008C0  0EFF               	movlw	255
  1144  0008C2  1626               	andwf	___ftadd@f2+1,f,c
  1145  0008C4  0E00               	movlw	0
  1146  0008C6  1627               	andwf	___ftadd@f2+2,f,c
  1147  0008C8  502C               	movf	___ftadd@exp2,w,c
  1148  0008CA  5C2D               	subwf	___ftadd@exp1,w,c
  1149  0008CC  B0D8               	btfsc	status,0,c
  1150  0008CE  D01E               	goto	l1033
  1151  0008D0                     l1023:
  1152  0008D0  90D8               	bcf	status,0,c
  1153  0008D2  3625               	rlcf	___ftadd@f2,f,c
  1154  0008D4  3626               	rlcf	___ftadd@f2+1,f,c
  1155  0008D6  3627               	rlcf	___ftadd@f2+2,f,c
  1156  0008D8  062C               	decf	___ftadd@exp2,f,c
  1157  0008DA  502D               	movf	___ftadd@exp1,w,c
  1158  0008DC  182C               	xorwf	___ftadd@exp2,w,c
  1159  0008DE  B4D8               	btfsc	status,2,c
  1160  0008E0  D00F               	goto	l1031
  1161  0008E2  062B               	decf	___ftadd@sign,f,c
  1162  0008E4  C02B  F028         	movff	___ftadd@sign,??___ftadd
  1163  0008E8  0E07               	movlw	7
  1164  0008EA  1628               	andwf	??___ftadd,f,c
  1165  0008EC  B4D8               	btfsc	status,2,c
  1166  0008EE  D008               	goto	l1031
  1167  0008F0  D7EF               	goto	l1023
  1168  0008F2  D006               	goto	l1031
  1169  0008F4                     l1029:
  1170  0008F4  90D8               	bcf	status,0,c
  1171  0008F6  3224               	rrcf	___ftadd@f1+2,f,c
  1172  0008F8  3223               	rrcf	___ftadd@f1+1,f,c
  1173  0008FA  3222               	rrcf	___ftadd@f1,f,c
  1174  0008FC  2A2D               	incf	___ftadd@exp1,f,c
  1175  0008FE  D000               	goto	l1031
  1176  000900                     l1031:
  1177  000900  502C               	movf	___ftadd@exp2,w,c
  1178  000902  182D               	xorwf	___ftadd@exp1,w,c
  1179  000904  B4D8               	btfsc	status,2,c
  1180  000906  D024               	goto	l437
  1181  000908  D7F5               	goto	l1029
  1182  00090A  D022               	goto	l437
  1183  00090C                     l1033:
  1184  00090C  502D               	movf	___ftadd@exp1,w,c
  1185  00090E  5C2C               	subwf	___ftadd@exp2,w,c
  1186  000910  B0D8               	btfsc	status,0,c
  1187  000912  D01E               	goto	l437
  1188  000914                     l1035:
  1189  000914  90D8               	bcf	status,0,c
  1190  000916  3622               	rlcf	___ftadd@f1,f,c
  1191  000918  3623               	rlcf	___ftadd@f1+1,f,c
  1192  00091A  3624               	rlcf	___ftadd@f1+2,f,c
  1193  00091C  062D               	decf	___ftadd@exp1,f,c
  1194  00091E  502D               	movf	___ftadd@exp1,w,c
  1195  000920  182C               	xorwf	___ftadd@exp2,w,c
  1196  000922  B4D8               	btfsc	status,2,c
  1197  000924  D00F               	goto	l1043
  1198  000926  062B               	decf	___ftadd@sign,f,c
  1199  000928  C02B  F028         	movff	___ftadd@sign,??___ftadd
  1200  00092C  0E07               	movlw	7
  1201  00092E  1628               	andwf	??___ftadd,f,c
  1202  000930  B4D8               	btfsc	status,2,c
  1203  000932  D008               	goto	l1043
  1204  000934  D7EF               	goto	l1035
  1205  000936  D006               	goto	l1043
  1206  000938                     l1041:
  1207  000938  90D8               	bcf	status,0,c
  1208  00093A  3227               	rrcf	___ftadd@f2+2,f,c
  1209  00093C  3226               	rrcf	___ftadd@f2+1,f,c
  1210  00093E  3225               	rrcf	___ftadd@f2,f,c
  1211  000940  2A2C               	incf	___ftadd@exp2,f,c
  1212  000942  D000               	goto	l1043
  1213  000944                     l1043:
  1214  000944  502C               	movf	___ftadd@exp2,w,c
  1215  000946  182D               	xorwf	___ftadd@exp1,w,c
  1216  000948  B4D8               	btfsc	status,2,c
  1217  00094A  D002               	goto	l437
  1218  00094C  D7F5               	goto	l1041
  1219  00094E  D000               	goto	l437
  1220  000950                     l437:
  1221  000950  AE2B               	btfss	___ftadd@sign,7,c
  1222  000952  D00C               	goto	l446
  1223  000954  0EFF               	movlw	255
  1224  000956  1A22               	xorwf	___ftadd@f1,f,c
  1225  000958  0EFF               	movlw	255
  1226  00095A  1A23               	xorwf	___ftadd@f1+1,f,c
  1227  00095C  0EFF               	movlw	255
  1228  00095E  1A24               	xorwf	___ftadd@f1+2,f,c
  1229  000960  0E01               	movlw	1
  1230  000962  2622               	addwf	___ftadd@f1,f,c
  1231  000964  0E00               	movlw	0
  1232  000966  2223               	addwfc	___ftadd@f1+1,f,c
  1233  000968  0E00               	movlw	0
  1234  00096A  2224               	addwfc	___ftadd@f1+2,f,c
  1235  00096C                     l446:
  1236  00096C  AC2B               	btfss	___ftadd@sign,6,c
  1237  00096E  D00D               	goto	l1049
  1238  000970  0EFF               	movlw	255
  1239  000972  1A25               	xorwf	___ftadd@f2,f,c
  1240  000974  0EFF               	movlw	255
  1241  000976  1A26               	xorwf	___ftadd@f2+1,f,c
  1242  000978  0EFF               	movlw	255
  1243  00097A  1A27               	xorwf	___ftadd@f2+2,f,c
  1244  00097C  0E01               	movlw	1
  1245  00097E  2625               	addwf	___ftadd@f2,f,c
  1246  000980  0E00               	movlw	0
  1247  000982  2226               	addwfc	___ftadd@f2+1,f,c
  1248  000984  0E00               	movlw	0
  1249  000986  2227               	addwfc	___ftadd@f2+2,f,c
  1250  000988  D000               	goto	l1049
  1251  00098A                     l1049:
  1252  00098A  0E00               	movlw	0
  1253  00098C  6E2B               	movwf	___ftadd@sign,c
  1254  00098E  5022               	movf	___ftadd@f1,w,c
  1255  000990  2625               	addwf	___ftadd@f2,f,c
  1256  000992  5023               	movf	___ftadd@f1+1,w,c
  1257  000994  2226               	addwfc	___ftadd@f2+1,f,c
  1258  000996  5024               	movf	___ftadd@f1+2,w,c
  1259  000998  2227               	addwfc	___ftadd@f2+2,f,c
  1260  00099A  AE27               	btfss	___ftadd@f2+2,7,c
  1261  00099C  D00F               	goto	l1059
  1262  00099E  0EFF               	movlw	255
  1263  0009A0  1A25               	xorwf	___ftadd@f2,f,c
  1264  0009A2  0EFF               	movlw	255
  1265  0009A4  1A26               	xorwf	___ftadd@f2+1,f,c
  1266  0009A6  0EFF               	movlw	255
  1267  0009A8  1A27               	xorwf	___ftadd@f2+2,f,c
  1268  0009AA  0E01               	movlw	1
  1269  0009AC  2625               	addwf	___ftadd@f2,f,c
  1270  0009AE  0E00               	movlw	0
  1271  0009B0  2226               	addwfc	___ftadd@f2+1,f,c
  1272  0009B2  0E00               	movlw	0
  1273  0009B4  2227               	addwfc	___ftadd@f2+2,f,c
  1274  0009B6  0E01               	movlw	1
  1275  0009B8  6E2B               	movwf	___ftadd@sign,c
  1276  0009BA  D000               	goto	l1059
  1277  0009BC                     l1059:
  1278  0009BC  C025  F001         	movff	___ftadd@f2,___ftpack@arg
  1279  0009C0  C026  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  1280  0009C4  C027  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  1281  0009C8  C02D  F004         	movff	___ftadd@exp1,___ftpack@exp
  1282  0009CC  C02B  F005         	movff	___ftadd@sign,___ftpack@sign
  1283  0009D0  ECD6  F005         	call	___ftpack	;wreg free
  1284  0009D4  C001  F022         	movff	?___ftpack,?___ftadd
  1285  0009D8  C002  F023         	movff	?___ftpack+1,?___ftadd+1
  1286  0009DC  C003  F024         	movff	?___ftpack+2,?___ftadd+2
  1287  0009E0  D000               	goto	l423
  1288  0009E2                     l423:
  1289  0009E2  0012               	return		;funcret
  1290  0009E4                     __end_of___ftadd:
  1291                           	opt stack 0
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           status	equ	0xFD8
  1297                           
  1298 ;; *************** function ___altoft *****************
  1299 ;; Defined at:
  1300 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\altoft.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;  c               4    8[COMRAM] long 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  sign            1   17[COMRAM] unsigned char 
  1305 ;;  exp             1   16[COMRAM] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  3    8[COMRAM] float 
  1308 ;; Registers used:
  1309 ;;		wreg, status,2, status,0, cstack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1315 ;;      Params:         4       0       0       0       0       0       0       0       0
  1316 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1317 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1318 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1319 ;;Total ram usage:       10 bytes
  1320 ;; Hardware stack levels used:    1
  1321 ;; Hardware stack levels required when called:    1
  1322 ;; This function calls:
  1323 ;;		___ftpack
  1324 ;; This function is called by:
  1325 ;;		_USART_Init
  1326 ;; This function uses a non-reentrant model
  1327 ;;
  1328                           
  1329                           	psect	text8
  1330  000CF2                     __ptext8:
  1331                           	opt stack 0
  1332  000CF2                     ___altoft:
  1333                           	opt stack 28
  1334                           
  1335                           ;incstack = 0
  1336  000CF2  0E00               	movlw	0
  1337  000CF4  6E12               	movwf	___altoft@sign,c
  1338  000CF6  0E8E               	movlw	142
  1339  000CF8  6E11               	movwf	___altoft@exp,c
  1340  000CFA  AE0C               	btfss	___altoft@c+3,7,c
  1341  000CFC  D012               	goto	l987
  1342  000CFE  1E0C               	comf	___altoft@c+3,f,c
  1343  000D00  1E0B               	comf	___altoft@c+2,f,c
  1344  000D02  1E0A               	comf	___altoft@c+1,f,c
  1345  000D04  6C09               	negf	___altoft@c,c
  1346  000D06  0E00               	movlw	0
  1347  000D08  220A               	addwfc	___altoft@c+1,f,c
  1348  000D0A  220B               	addwfc	___altoft@c+2,f,c
  1349  000D0C  220C               	addwfc	___altoft@c+3,f,c
  1350  000D0E  0E01               	movlw	1
  1351  000D10  6E12               	movwf	___altoft@sign,c
  1352  000D12  D007               	goto	l987
  1353  000D14                     l985:
  1354  000D14  90D8               	bcf	status,0,c
  1355  000D16  320C               	rrcf	___altoft@c+3,f,c
  1356  000D18  320B               	rrcf	___altoft@c+2,f,c
  1357  000D1A  320A               	rrcf	___altoft@c+1,f,c
  1358  000D1C  3209               	rrcf	___altoft@c,f,c
  1359  000D1E  2A11               	incf	___altoft@exp,f,c
  1360  000D20  D000               	goto	l987
  1361  000D22                     l987:
  1362  000D22  0E00               	movlw	0
  1363  000D24  1409               	andwf	___altoft@c,w,c
  1364  000D26  6E0D               	movwf	??___altoft& (0+255),c
  1365  000D28  0E00               	movlw	0
  1366  000D2A  140A               	andwf	___altoft@c+1,w,c
  1367  000D2C  6E0E               	movwf	(??___altoft+1)& (0+255),c
  1368  000D2E  0E00               	movlw	0
  1369  000D30  140B               	andwf	___altoft@c+2,w,c
  1370  000D32  6E0F               	movwf	(??___altoft+2)& (0+255),c
  1371  000D34  0EFF               	movlw	255
  1372  000D36  140C               	andwf	___altoft@c+3,w,c
  1373  000D38  6E10               	movwf	(??___altoft+3)& (0+255),c
  1374  000D3A  500D               	movf	??___altoft,w,c
  1375  000D3C  100E               	iorwf	??___altoft+1,w,c
  1376  000D3E  100F               	iorwf	??___altoft+2,w,c
  1377  000D40  1010               	iorwf	??___altoft+3,w,c
  1378  000D42  A4D8               	btfss	status,2,c
  1379  000D44  D7E7               	goto	l985
  1380  000D46  C009  F001         	movff	___altoft@c,___ftpack@arg
  1381  000D4A  C00A  F002         	movff	___altoft@c+1,___ftpack@arg+1
  1382  000D4E  C00B  F003         	movff	___altoft@c+2,___ftpack@arg+2
  1383  000D52  C011  F004         	movff	___altoft@exp,___ftpack@exp
  1384  000D56  C012  F005         	movff	___altoft@sign,___ftpack@sign
  1385  000D5A  ECD6  F005         	call	___ftpack	;wreg free
  1386  000D5E  C001  F009         	movff	?___ftpack,?___altoft
  1387  000D62  C002  F00A         	movff	?___ftpack+1,?___altoft+1
  1388  000D66  C003  F00B         	movff	?___ftpack+2,?___altoft+2
  1389  000D6A  D000               	goto	l171
  1390  000D6C                     l171:
  1391  000D6C  0012               	return		;funcret
  1392  000D6E                     __end_of___altoft:
  1393                           	opt stack 0
  1394                           tblptru	equ	0xFF8
  1395                           tblptrh	equ	0xFF7
  1396                           tblptrl	equ	0xFF6
  1397                           tablat	equ	0xFF5
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function ___ftpack *****************
  1401 ;; Defined at:
  1402 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;  arg             3    0[COMRAM] unsigned um
  1405 ;;  exp             1    3[COMRAM] unsigned char 
  1406 ;;  sign            1    4[COMRAM] unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;		None
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  3    0[COMRAM] float 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1418 ;;      Params:         5       0       0       0       0       0       0       0       0
  1419 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1420 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1421 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1422 ;;Total ram usage:        8 bytes
  1423 ;; Hardware stack levels used:    1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		___altoft
  1428 ;;		___ftadd
  1429 ;;		___ftdiv
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text9
  1434  000BAC                     __ptext9:
  1435                           	opt stack 0
  1436  000BAC                     ___ftpack:
  1437                           	opt stack 28
  1438                           
  1439                           ;incstack = 0
  1440  000BAC  5004               	movf	___ftpack@exp,w,c
  1441  000BAE  B4D8               	btfsc	status,2,c
  1442  000BB0  D005               	goto	l945
  1443  000BB2  5001               	movf	___ftpack@arg,w,c
  1444  000BB4  1002               	iorwf	___ftpack@arg+1,w,c
  1445  000BB6  1003               	iorwf	___ftpack@arg+2,w,c
  1446  000BB8  A4D8               	btfss	status,2,c
  1447  000BBA  D00E               	goto	l951
  1448  000BBC                     l945:
  1449  000BBC  0E00               	movlw	0
  1450  000BBE  6E01               	movwf	?___ftpack,c
  1451  000BC0  0E00               	movlw	0
  1452  000BC2  6E02               	movwf	?___ftpack+1,c
  1453  000BC4  0E00               	movlw	0
  1454  000BC6  6E03               	movwf	?___ftpack+2,c
  1455  000BC8  D053               	goto	l382
  1456  000BCA  D006               	goto	l951
  1457  000BCC                     l949:
  1458  000BCC  2A04               	incf	___ftpack@exp,f,c
  1459  000BCE  90D8               	bcf	status,0,c
  1460  000BD0  3203               	rrcf	___ftpack@arg+2,f,c
  1461  000BD2  3202               	rrcf	___ftpack@arg+1,f,c
  1462  000BD4  3201               	rrcf	___ftpack@arg,f,c
  1463  000BD6  D000               	goto	l951
  1464  000BD8                     l951:
  1465  000BD8  0E00               	movlw	0
  1466  000BDA  1401               	andwf	___ftpack@arg,w,c
  1467  000BDC  6E06               	movwf	??___ftpack& (0+255),c
  1468  000BDE  0E00               	movlw	0
  1469  000BE0  1402               	andwf	___ftpack@arg+1,w,c
  1470  000BE2  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1471  000BE4  0EFE               	movlw	254
  1472  000BE6  1403               	andwf	___ftpack@arg+2,w,c
  1473  000BE8  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1474  000BEA  5006               	movf	??___ftpack,w,c
  1475  000BEC  1007               	iorwf	??___ftpack+1,w,c
  1476  000BEE  1008               	iorwf	??___ftpack+2,w,c
  1477  000BF0  B4D8               	btfsc	status,2,c
  1478  000BF2  D00E               	goto	l957
  1479  000BF4  D7EB               	goto	l949
  1480  000BF6  D00C               	goto	l957
  1481  000BF8                     l953:
  1482  000BF8  2A04               	incf	___ftpack@exp,f,c
  1483  000BFA  0E01               	movlw	1
  1484  000BFC  2601               	addwf	___ftpack@arg,f,c
  1485  000BFE  0E00               	movlw	0
  1486  000C00  2202               	addwfc	___ftpack@arg+1,f,c
  1487  000C02  0E00               	movlw	0
  1488  000C04  2203               	addwfc	___ftpack@arg+2,f,c
  1489  000C06  90D8               	bcf	status,0,c
  1490  000C08  3203               	rrcf	___ftpack@arg+2,f,c
  1491  000C0A  3202               	rrcf	___ftpack@arg+1,f,c
  1492  000C0C  3201               	rrcf	___ftpack@arg,f,c
  1493  000C0E  D000               	goto	l957
  1494  000C10                     l957:
  1495  000C10  0E00               	movlw	0
  1496  000C12  1401               	andwf	___ftpack@arg,w,c
  1497  000C14  6E06               	movwf	??___ftpack& (0+255),c
  1498  000C16  0E00               	movlw	0
  1499  000C18  1402               	andwf	___ftpack@arg+1,w,c
  1500  000C1A  6E07               	movwf	(??___ftpack+1)& (0+255),c
  1501  000C1C  0EFF               	movlw	255
  1502  000C1E  1403               	andwf	___ftpack@arg+2,w,c
  1503  000C20  6E08               	movwf	(??___ftpack+2)& (0+255),c
  1504  000C22  5006               	movf	??___ftpack,w,c
  1505  000C24  1007               	iorwf	??___ftpack+1,w,c
  1506  000C26  1008               	iorwf	??___ftpack+2,w,c
  1507  000C28  B4D8               	btfsc	status,2,c
  1508  000C2A  D008               	goto	l961
  1509  000C2C  D7E5               	goto	l953
  1510  000C2E  D006               	goto	l961
  1511  000C30                     l959:
  1512  000C30  0604               	decf	___ftpack@exp,f,c
  1513  000C32  90D8               	bcf	status,0,c
  1514  000C34  3601               	rlcf	___ftpack@arg,f,c
  1515  000C36  3602               	rlcf	___ftpack@arg+1,f,c
  1516  000C38  3603               	rlcf	___ftpack@arg+2,f,c
  1517  000C3A  D000               	goto	l961
  1518  000C3C                     l961:
  1519  000C3C  BE02               	btfsc	___ftpack@arg+1,7,c
  1520  000C3E  D004               	goto	l393
  1521  000C40  0E02               	movlw	2
  1522  000C42  6004               	cpfslt	___ftpack@exp,c
  1523  000C44  D7F5               	goto	l959
  1524  000C46  D000               	goto	l393
  1525  000C48                     l393:
  1526  000C48  B004               	btfsc	___ftpack@exp,0,c
  1527  000C4A  D002               	goto	l967
  1528  000C4C  9E02               	bcf	___ftpack@arg+1,7,c
  1529  000C4E  D000               	goto	l967
  1530  000C50                     l967:
  1531  000C50  90D8               	bcf	status,0,c
  1532  000C52  3204               	rrcf	___ftpack@exp,f,c
  1533  000C54  5004               	movf	___ftpack@exp,w,c
  1534  000C56  1203               	iorwf	___ftpack@arg+2,f,c
  1535  000C58  5005               	movf	___ftpack@sign,w,c
  1536  000C5A  B4D8               	btfsc	status,2,c
  1537  000C5C  D002               	goto	l973
  1538  000C5E  8E03               	bsf	___ftpack@arg+2,7,c
  1539  000C60  D000               	goto	l973
  1540  000C62                     l973:
  1541  000C62  C001  F001         	movff	___ftpack@arg,?___ftpack
  1542  000C66  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  1543  000C6A  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  1544  000C6E  D000               	goto	l382
  1545  000C70                     l382:
  1546  000C70  0012               	return		;funcret
  1547  000C72                     __end_of___ftpack:
  1548                           	opt stack 0
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           status	equ	0xFD8
  1554                           
  1555 ;; *************** function _MSdelay *****************
  1556 ;; Defined at:
  1557 ;;		line 42 in file "USART_Source_File.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  val             2    0[COMRAM] unsigned int 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;  j               2    4[COMRAM] unsigned int 
  1562 ;;  i               2    2[COMRAM] unsigned int 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;		None               void
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1572 ;;      Params:         2       0       0       0       0       0       0       0       0
  1573 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1575 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1576 ;;Total ram usage:        6 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           
  1585                           	psect	text10
  1586  000DE8                     __ptext10:
  1587                           	opt stack 0
  1588  000DE8                     _MSdelay:
  1589                           	opt stack 30
  1590                           
  1591                           ;USART_Source_File.c: 44: unsigned int i,j;
  1592                           ;USART_Source_File.c: 45: for(i=0;i<=val;i++)
  1593                           
  1594                           ;incstack = 0
  1595  000DE8  0E00               	movlw	0
  1596  000DEA  6E04               	movwf	MSdelay@i+1,c
  1597  000DEC  0E00               	movlw	0
  1598  000DEE  6E03               	movwf	MSdelay@i,c
  1599  000DF0  D013               	goto	l1177
  1600  000DF2                     l1165:
  1601                           
  1602                           ;USART_Source_File.c: 46: for(j=0;j<81;j++);
  1603  000DF2  0E00               	movlw	0
  1604  000DF4  6E06               	movwf	MSdelay@j+1,c
  1605  000DF6  0E00               	movlw	0
  1606  000DF8  6E05               	movwf	MSdelay@j,c
  1607  000DFA                     l1167:
  1608  000DFA  5006               	movf	MSdelay@j+1,w,c
  1609  000DFC  E10A               	bnz	l1175
  1610  000DFE  0E51               	movlw	81
  1611  000E00  5C05               	subwf	MSdelay@j,w,c
  1612  000E02  B0D8               	btfsc	status,0,c
  1613  000E04  D006               	goto	l1175
  1614  000E06  D001               	goto	l1171
  1615  000E08  D004               	goto	l1175
  1616  000E0A                     l1171:
  1617  000E0A  4A05               	infsnz	MSdelay@j,f,c
  1618  000E0C  2A06               	incf	MSdelay@j+1,f,c
  1619  000E0E  D7F5               	goto	l1167
  1620  000E10  D000               	goto	l1175
  1621  000E12                     l1175:
  1622  000E12  4A03               	infsnz	MSdelay@i,f,c
  1623  000E14  2A04               	incf	MSdelay@i+1,f,c
  1624  000E16  D000               	goto	l1177
  1625  000E18                     l1177:
  1626  000E18  5003               	movf	MSdelay@i,w,c
  1627  000E1A  5C01               	subwf	MSdelay@val,w,c
  1628  000E1C  5004               	movf	MSdelay@i+1,w,c
  1629  000E1E  5802               	subwfb	MSdelay@val+1,w,c
  1630  000E20  B0D8               	btfsc	status,0,c
  1631  000E22  D7E7               	goto	l1165
  1632  000E24  0012               	return		;funcret
  1633  000E26                     __end_of_MSdelay:
  1634                           	opt stack 0
  1635                           tblptru	equ	0xFF8
  1636                           tblptrh	equ	0xFF7
  1637                           tblptrl	equ	0xFF6
  1638                           tablat	equ	0xFF5
  1639                           status	equ	0xFD8
  1640                           tblptru	equ	0xFF8
  1641                           tblptrh	equ	0xFF7
  1642                           tblptrl	equ	0xFF6
  1643                           tablat	equ	0xFF5
  1644                           status	equ	0xFD8
  1645                           
  1646                           	psect	rparam
  1647  0000                     tblptru	equ	0xFF8
  1648                           tblptrh	equ	0xFF7
  1649                           tblptrl	equ	0xFF6
  1650                           tablat	equ	0xFF5
  1651                           status	equ	0xFD8


Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     53      53
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    USART_SendString@out	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), STR_2(CODE[8]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_USART_Init
    _USART_SendString->_USART_TransmitChar
    _USART_Init->___ftadd
    ___ftdiv->___altoft
    ___ftadd->___ftdiv
    ___altoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7632
                                             52 COMRAM     1     1      0
                            _MSdelay
                         _USART_Init
                  _USART_ReceiveChar
                   _USART_SendString
 ---------------------------------------------------------------------------------
 (1) _USART_SendString                                     2     0      2     219
                                              1 COMRAM     2     0      2
                 _USART_TransmitChar
 ---------------------------------------------------------------------------------
 (2) _USART_TransmitChar                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_ReceiveChar                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_Init                                           7     3      4    7170
                                             45 COMRAM     7     3      4
                           ___altoft
                            ___ftadd
                            ___ftdiv
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     305
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2134
                                             18 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    2774
                                             33 COMRAM    12     6      6
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    1859
                                              8 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1668
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _MSdelay                                              6     4      2     198
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MSdelay
   _USART_Init
     ___altoft
       ___ftpack
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
   _USART_ReceiveChar
   _USART_SendString
     _USART_TransmitChar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     35      35       1       55.8%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Aug 17 12:14:32 2016

               ___altoft@exp 0011                ___altoft@sign 0012                           l54 0E70  
                         l48 0E64                           l57 0E78                  __CFG_BOR$ON 000000  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                 ___ftadd@exp1 002D  
               ___ftadd@exp2 002C                 ___ftadd@sign 002B                          l171 0D6C  
                        l422 0864                          l423 09E2                          l426 088E  
                        l437 0950                          l382 0C70                          l446 096C  
                        l454 0BAA                          l393 0C48                          l457 0B76  
                        l490 0AC8                          l951 0BD8                          l961 0C3C  
                        l953 0BF8                          l945 0BBC                          l973 0C62  
                        l957 0C10                          l949 0BCC                          l967 0C50  
                        l959 0C30                          l985 0D14                          l987 0D22  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          u631 0830  
                        u641 0844                          u910 0A20                          u841 0ADA  
                        u915 0A18                          u861 0AF8                          u891 09F4  
                main@data_in 0035                 __CFG_LVP$OFF 000000                 ___ftdiv@cntr 001C  
               ___ftdiv@sign 0021                 __CFG_WDT$OFF 000000                         l1001 0872  
                       l1013 08A8                         l1031 0900                         l1023 08D0  
                       l1007 089C                         l1041 0938                         l1033 090C  
                       l1105 0B84                         l1201 0CBA                         l1043 0944  
                       l1035 0914                         l1115 0A02                         l1029 08F4  
                       l1133 0A5C                         l1071 0B02                         l1151 0AB6  
                       l1143 0A86                         l1207 0CD2                         l1049 098A  
                       l1145 0A94                         l1137 0A6C                         l1209 0CE0  
                       l1171 0E0A                         l1059 09BC                         l1075 0B10  
                       l1139 0A72                         l1147 0A9E                         l1165 0DF2  
                       l1069 0AE8                         l1181 0E28                         l1175 0E12  
                       l1167 0DFA                         l1095 0B50                         l1177 0E18  
                       l1185 0E3E                         l1193 0C9C                         STR_1 0818  
                       STR_2 0810                         STR_3 0801                         _RCIF 007CF5  
                       _TXIF 007CF4                         _main 0C72                 ___ftpack@arg 0001  
               ___ftpack@exp 0004     __end_of_USART_SendString 0E52                         start 0000  
            __end_of_MSdelay 0E26                __CFG_IESO$OFF 000000                 ___param_bank 000010  
               ___fttol@exp1 000F                 ___fttol@lval 000B                __CFG_PLLDIV$1 000000  
             __CFG_CCP2MX$ON 000000                        ?_main 0001              __end_of___ftadd 09E4  
            __end_of___ftdiv 0BAC              __end_of___fttol 0ACA                        _LATD0 007C60  
                      _RCREG 000FAE                        _RCSTA 000FAB                        _SPBRG 000FAF  
              __CFG_USBDIV$1 000000                        _TRISD 000F95                        _TXREG 000FAD  
                      _TXSTA 000FAC                __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000  
              __CFG_WRTC$OFF 000000                __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000  
              ___ftpack@sign 0005                        tablat 000FF5                        status 000FD8  
             __CFG_ICPRT$OFF 000000                  ?_USART_Init 002E               __CFG_MCLRE$OFF 000000  
            __initialization 0E52                 __end_of_main 0CF2                       ??_main 0035  
              ___fttol@sign1 000A                __activetblptr 000001             __end_of___altoft 0D6E  
           __end_of___ftpack 0C72                    ??_MSdelay 0003                       _OSCCON 000FD3  
                     _TRISC6 007CA6                       _TRISC7 007CA7               __CFG_XINST$OFF 000000  
                  ??___ftadd 0028               __CFG_STVREN$ON 000000                    ??___ftdiv 0019  
                  ??___fttol 0005   __end_of_USART_TransmitChar 0E6E                 __mediumconst 0000  
                     tblptrh 000FF7                       tblptrl 000FF6                       tblptru 000FF8  
        __size_of_USART_Init 007A                   __accesstop 0060      __end_of__initialization 0E52  
                 ___altoft@c 0009              __CFG_PBADEN$OFF 000000                   ___ftadd@f1 0022  
                 ___ftadd@f2 0025                ___rparam_used 000001                   ___ftdiv@f1 0013  
                 ___ftdiv@f2 0016                   ___ftdiv@f3 001D                   ___fttol@f1 0001  
             __pcstackCOMRAM 0001            ?_USART_SendString 0002           ??_USART_SendString 0004  
                  ?___altoft 0009                    ?___ftpack 0001                      _MSdelay 0DE8  
            __CFG_VREGEN$OFF 000000                 ??_USART_Init 0032                      __Hparam 0000  
                    __Lparam 0000                      ___ftadd 0820                      ___ftdiv 0ACA  
                    ___fttol 09E4                 __psmallconst 0800                   ??___altoft 000D  
                    __pcinit 0E52                   ??___ftpack 0006                      __ramtop 0800  
                    __ptext0 0C72                      __ptext1 0E26                      __ptext2 0E60  
                    __ptext3 0E6E                      __ptext4 0D6E                      __ptext5 09E4  
                    __ptext6 0ACA                      __ptext7 0820                      __ptext8 0CF2  
                    __ptext9 0BAC          USART_SendString@out 0002               USART_Init@temp 0032  
         __end_of_USART_Init 0DE8         end_of_initialization 0E52          USART_Init@baud_rate 002E  
      USART_TransmitChar@out 0001                  ___ftdiv@exp 0020           _USART_TransmitChar 0E60  
        ?_USART_TransmitChar 0001          start_initialization 0E52         ??_USART_TransmitChar 0001  
          _USART_ReceiveChar 0E6E           ?_USART_ReceiveChar 0001             __CFG_LPT1OSC$OFF 000000  
        ??_USART_ReceiveChar 0001    __size_of_USART_SendString 002C            __size_of___altoft 007C  
          __size_of___ftpack 00C6                     ?_MSdelay 0001    __end_of_USART_ReceiveChar 0E7A  
                   ?___ftadd 0022                     ?___ftdiv 0013                     ?___fttol 0001  
                __smallconst 0800                     MSdelay@i 0003                     MSdelay@j 0005  
           __CFG_WDTPS$32768 000000             __size_of_MSdelay 003E   __size_of_USART_ReceiveChar 000C  
                   __Hrparam 0000                     __Lrparam 0000                 __Lsmallconst 0800  
           __size_of___ftadd 01C4             __size_of___ftdiv 00E2                     ___altoft 0CF2  
           __size_of___fttol 00E6                     ___ftpack 0BAC             _USART_SendString 0E26  
                   __ptext10 0DE8                __size_of_main 0080                   MSdelay@val 0001  
      __CFG_CPUDIV$OSC1_PLL2 000000  __size_of_USART_TransmitChar 000E          __CFG_FOSC$INTOSC_EC 000000  
                 _USART_Init 0D6E  
